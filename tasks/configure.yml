---
- name: "add user to docker group"
  user:
    append: yes
    name: "{{ docker_user }}"
    groups: "docker"

- name: "enable docker service"
  systemd:
    name: docker
    enabled: "{{ docker_service_enabled }}"

- name: "upload docker configuration"
  template:
    src: "etc/docker/daemon.json.j2"
    dest: "/etc/docker/daemon.json"
  notify: restart docker

- name: "upload docker service file"
  template:
    src: "etc/systemd/system/docker.service.j2"
    dest: "/etc/systemd/system/docker.service"
  notify: ["daemon-reload", "restart docker"]

- name: "create tls directory"
  file:
    path: "{{ docker_cert_path }}"
    state: directory
    mode: 0750
    owner: root
    group: root
  when: ( docker_cert_file   | length > 0 ) or
        ( docker_key_file    | length > 0 ) or
        ( docker_cacert_file | length > 0 )

- name: "upload certificates"
  copy:
    src: "{{ item.0 }}"
    dest: "{{ item.1 }}"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: 0400
  when: (docker_cert_file|length > 0) and (docker_key_file|length > 0)
  with_together:
    - ["{{ docker_cert_file }}", "{{ docker_key_file }}"]
    - ["{{ docker_config.tlscert | default(docker_cert_path + '/cert.pem') }}",
       "{{ docker_config.tlskey  | default(docker_cert_path + '/key.pem') }}"]

- name: "upload ca certificate"
  copy:
    src: "{{ docker_cacert_file }}"
    dest: "{{ docker_config.tlscacert | default(docker_cert_path + '/ca.pem') }}"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: 0400
  when: (docker_cacert_file | length > 0)

- name: "log into private registry and force re-authorization"
  docker_login:
    registry: "{{ docker_login_credentials.registry }}"
    username: "{{ docker_login_credentials.username }}"
    password: "{{ docker_login_credentials.password }}"
    reauthorize: yes
  become: True
  become_user: "{{ docker_user }}"
  when: docker_login_credentials | length > 0
